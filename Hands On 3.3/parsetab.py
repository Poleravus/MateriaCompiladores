
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightNOTleftANDORleftTIMESDIVIDEleftPLUSMINUSAND BOOLEAN DIVIDE EQUALS ID INT LBRACE LPAREN MINUS NOT NUMBER OR PLUS RBRACE RETURN RPAREN SEMICOLON TIMESprogram : functionfunction : INT ID LPAREN RPAREN blockblock : LBRACE decls RBRACEdecls : decl decls\n| decldecl : INT ID EQUALS expr SEMICOLONdecl : RETURN expr SEMICOLONexpr : expr PLUS term\n| expr MINUS term\n| termterm : term TIMES factor\n| term DIVIDE factor\n| factorfactor : LPAREN expr RPARENfactor : logicallogical : logical AND logic_term\n| logical OR logic_termlogical : logic_termlogic_term : NOT logic_factorlogic_term : logic_factorlogic_factor : LPAREN logical RPARENlogic_factor : BOOLEAN\n| NUMBERlogic_factor : expr'
    
_lr_action_items = {'INT':([0,8,10,27,48,],[3,11,11,-7,-6,]),'$end':([1,2,7,13,],[0,-1,-2,-3,]),'ID':([3,11,],[4,15,]),'LPAREN':([4,12,19,22,26,28,29,30,31,34,35,37,],[5,19,19,37,19,19,19,19,19,37,37,37,]),'RPAREN':([5,17,18,20,21,23,24,25,32,33,36,38,40,41,42,43,44,45,46,47,],[6,-10,-13,-15,-18,-20,-22,-23,44,45,-19,-24,-8,-9,-11,-12,-14,-21,-16,-17,]),'LBRACE':([6,],[8,]),'RETURN':([8,10,27,48,],[12,12,-7,-6,]),'RBRACE':([9,10,14,27,48,],[13,-5,-4,-7,-6,]),'NOT':([12,19,22,26,28,29,30,31,34,35,37,],[22,22,22,22,22,22,22,22,22,22,22,]),'BOOLEAN':([12,19,22,26,28,29,30,31,34,35,37,],[24,24,24,24,24,24,24,24,24,24,24,]),'NUMBER':([12,19,22,26,28,29,30,31,34,35,37,],[25,25,25,25,25,25,25,25,25,25,25,]),'EQUALS':([15,],[26,]),'SEMICOLON':([16,17,18,20,21,23,24,25,36,38,39,40,41,42,43,44,45,46,47,],[27,-10,-13,-15,-18,-20,-22,-23,-19,-24,48,-8,-9,-11,-12,-14,-21,-16,-17,]),'PLUS':([16,17,18,20,21,23,24,25,32,33,36,38,39,40,41,42,43,44,45,46,47,],[28,-10,-13,-15,-18,-20,-22,-23,28,-15,-19,28,28,-8,-9,-11,-12,-14,-21,-16,-17,]),'MINUS':([16,17,18,20,21,23,24,25,32,33,36,38,39,40,41,42,43,44,45,46,47,],[29,-10,-13,-15,-18,-20,-22,-23,29,-15,-19,29,29,-8,-9,-11,-12,-14,-21,-16,-17,]),'AND':([16,17,18,20,21,23,24,25,32,33,36,38,39,40,41,42,43,44,45,46,47,],[-24,-10,-13,34,-18,-20,-22,-23,-24,34,-19,-24,-24,-8,-9,-11,-12,-14,-21,-16,-17,]),'OR':([16,17,18,20,21,23,24,25,32,33,36,38,39,40,41,42,43,44,45,46,47,],[-24,-10,-13,35,-18,-20,-22,-23,-24,35,-19,-24,-24,-8,-9,-11,-12,-14,-21,-16,-17,]),'TIMES':([16,17,18,20,21,23,24,25,32,33,36,38,39,40,41,42,43,44,45,46,47,],[-24,30,-13,-15,-18,-20,-22,-23,-24,-15,-19,-24,-24,-8,-9,-11,-12,-14,-21,-16,-17,]),'DIVIDE':([16,17,18,20,21,23,24,25,32,33,36,38,39,40,41,42,43,44,45,46,47,],[-24,31,-13,-15,-18,-20,-22,-23,-24,-15,-19,-24,-24,-8,-9,-11,-12,-14,-21,-16,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function':([0,],[2,]),'block':([6,],[7,]),'decls':([8,10,],[9,14,]),'decl':([8,10,],[10,10,]),'expr':([12,19,22,26,28,29,30,31,34,35,37,],[16,32,38,39,38,38,38,38,38,38,32,]),'term':([12,19,22,26,28,29,30,31,34,35,37,],[17,17,17,17,40,41,17,17,17,17,17,]),'factor':([12,19,22,26,28,29,30,31,34,35,37,],[18,18,18,18,18,18,42,43,18,18,18,]),'logical':([12,19,22,26,28,29,30,31,34,35,37,],[20,33,20,20,20,20,20,20,20,20,33,]),'logic_term':([12,19,22,26,28,29,30,31,34,35,37,],[21,21,21,21,21,21,21,21,46,47,21,]),'logic_factor':([12,19,22,26,28,29,30,31,34,35,37,],[23,23,36,23,23,23,23,23,23,23,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','sintactico3_3.py',12),
  ('function -> INT ID LPAREN RPAREN block','function',5,'p_function','sintactico3_3.py',16),
  ('block -> LBRACE decls RBRACE','block',3,'p_block','sintactico3_3.py',20),
  ('decls -> decl decls','decls',2,'p_decls','sintactico3_3.py',24),
  ('decls -> decl','decls',1,'p_decls','sintactico3_3.py',25),
  ('decl -> INT ID EQUALS expr SEMICOLON','decl',5,'p_decl_variable','sintactico3_3.py',29),
  ('decl -> RETURN expr SEMICOLON','decl',3,'p_decl_return','sintactico3_3.py',33),
  ('expr -> expr PLUS term','expr',3,'p_expr','sintactico3_3.py',37),
  ('expr -> expr MINUS term','expr',3,'p_expr','sintactico3_3.py',38),
  ('expr -> term','expr',1,'p_expr','sintactico3_3.py',39),
  ('term -> term TIMES factor','term',3,'p_term','sintactico3_3.py',43),
  ('term -> term DIVIDE factor','term',3,'p_term','sintactico3_3.py',44),
  ('term -> factor','term',1,'p_term','sintactico3_3.py',45),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_group','sintactico3_3.py',49),
  ('factor -> logical','factor',1,'p_factor_logical','sintactico3_3.py',53),
  ('logical -> logical AND logic_term','logical',3,'p_logical_binop','sintactico3_3.py',57),
  ('logical -> logical OR logic_term','logical',3,'p_logical_binop','sintactico3_3.py',58),
  ('logical -> logic_term','logical',1,'p_logical_term','sintactico3_3.py',62),
  ('logic_term -> NOT logic_factor','logic_term',2,'p_logic_term_not','sintactico3_3.py',66),
  ('logic_term -> logic_factor','logic_term',1,'p_logic_term_factor','sintactico3_3.py',70),
  ('logic_factor -> LPAREN logical RPAREN','logic_factor',3,'p_logic_factor_group','sintactico3_3.py',74),
  ('logic_factor -> BOOLEAN','logic_factor',1,'p_logic_factor_boolean','sintactico3_3.py',78),
  ('logic_factor -> NUMBER','logic_factor',1,'p_logic_factor_boolean','sintactico3_3.py',79),
  ('logic_factor -> expr','logic_factor',1,'p_logic_factor_expr','sintactico3_3.py',83),
]
