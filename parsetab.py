
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEDIVIDE EQUALS ID INT LPAREN MINUS NUMBER PLUS RETURN RPAREN SEMICOLON TIMESprogram : declsdecls : decl decls\n| decldecl : INT ID EQUALS expr SEMICOLONdecl : RETURN expr SEMICOLONexpr : expr PLUS expr\n| expr MINUS expr\n| expr TIMES expr\n| expr DIVIDE exprexpr : LPAREN expr RPARENexpr : NUMBERexpr : ID'
    
_lr_action_items = {'INT':([0,3,13,25,],[4,4,-5,-4,]),'RETURN':([0,3,13,25,],[5,5,-5,-4,]),'$end':([1,2,3,6,13,25,],[0,-1,-3,-2,-5,-4,]),'ID':([4,5,9,12,14,15,16,17,],[7,11,11,11,11,11,11,11,]),'LPAREN':([5,9,12,14,15,16,17,],[9,9,9,9,9,9,9,]),'NUMBER':([5,9,12,14,15,16,17,],[10,10,10,10,10,10,10,]),'EQUALS':([7,],[12,]),'SEMICOLON':([8,10,11,19,20,21,22,23,24,],[13,-11,-12,25,-6,-7,-8,-9,-10,]),'PLUS':([8,10,11,18,19,20,21,22,23,24,],[14,-11,-12,14,14,-6,-7,-8,-9,-10,]),'MINUS':([8,10,11,18,19,20,21,22,23,24,],[15,-11,-12,15,15,-6,-7,-8,-9,-10,]),'TIMES':([8,10,11,18,19,20,21,22,23,24,],[16,-11,-12,16,16,16,16,-8,-9,-10,]),'DIVIDE':([8,10,11,18,19,20,21,22,23,24,],[17,-11,-12,17,17,17,17,-8,-9,-10,]),'RPAREN':([10,11,18,20,21,22,23,24,],[-11,-12,24,-6,-7,-8,-9,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'decls':([0,3,],[2,6,]),'decl':([0,3,],[3,3,]),'expr':([5,9,12,14,15,16,17,],[8,18,19,20,21,22,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> decls','program',1,'p_program','sintactico.py',11),
  ('decls -> decl decls','decls',2,'p_decls','sintactico.py',15),
  ('decls -> decl','decls',1,'p_decls','sintactico.py',16),
  ('decl -> INT ID EQUALS expr SEMICOLON','decl',5,'p_decl_variable','sintactico.py',20),
  ('decl -> RETURN expr SEMICOLON','decl',3,'p_decl_return','sintactico.py',24),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','sintactico.py',28),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','sintactico.py',29),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','sintactico.py',30),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','sintactico.py',31),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','sintactico.py',39),
  ('expr -> NUMBER','expr',1,'p_expr_number','sintactico.py',43),
  ('expr -> ID','expr',1,'p_expr_id','sintactico.py',47),
]
