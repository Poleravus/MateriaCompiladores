
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORrightNOTAND BOOLEAN DIVIDE EQUALS ID INT LBRACE LPAREN MINUS NOT NUMBER OR PLUS RBRACE RETURN RPAREN SEMICOLON TIMESprogram : functionfunction : INT ID LPAREN RPAREN blockblock : LBRACE decls RBRACEdecls : decl decls\n| decldecl : RETURN expr SEMICOLONexpr : expr AND term\n| expr OR termexpr : termterm : NOT factorterm : factorfactor : LPAREN expr RPARENfactor : BOOLEAN\n| NUMBER'
    
_lr_action_items = {'INT':([0,],[3,]),'$end':([1,2,7,12,],[0,-1,-2,-3,]),'ID':([3,],[4,]),'LPAREN':([4,11,16,18,22,23,],[5,18,18,18,18,18,]),'RPAREN':([5,15,17,19,20,24,25,26,27,28,],[6,-9,-11,-13,-14,-10,28,-7,-8,-12,]),'LBRACE':([6,],[8,]),'RETURN':([8,10,21,],[11,11,-6,]),'RBRACE':([9,10,13,21,],[12,-5,-4,-6,]),'NOT':([11,18,22,23,],[16,16,16,16,]),'BOOLEAN':([11,16,18,22,23,],[19,19,19,19,19,]),'NUMBER':([11,16,18,22,23,],[20,20,20,20,20,]),'SEMICOLON':([14,15,17,19,20,24,26,27,28,],[21,-9,-11,-13,-14,-10,-7,-8,-12,]),'AND':([14,15,17,19,20,24,25,26,27,28,],[22,-9,-11,-13,-14,-10,22,-7,-8,-12,]),'OR':([14,15,17,19,20,24,25,26,27,28,],[23,-9,-11,-13,-14,-10,23,-7,-8,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function':([0,],[2,]),'block':([6,],[7,]),'decls':([8,10,],[9,13,]),'decl':([8,10,],[10,10,]),'expr':([11,18,],[14,25,]),'term':([11,18,22,23,],[15,15,26,27,]),'factor':([11,16,18,22,23,],[17,24,17,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','sintactico3_2.py',10),
  ('function -> INT ID LPAREN RPAREN block','function',5,'p_function','sintactico3_2.py',14),
  ('block -> LBRACE decls RBRACE','block',3,'p_block','sintactico3_2.py',18),
  ('decls -> decl decls','decls',2,'p_decls','sintactico3_2.py',22),
  ('decls -> decl','decls',1,'p_decls','sintactico3_2.py',23),
  ('decl -> RETURN expr SEMICOLON','decl',3,'p_decl_return','sintactico3_2.py',27),
  ('expr -> expr AND term','expr',3,'p_expr_binop','sintactico3_2.py',31),
  ('expr -> expr OR term','expr',3,'p_expr_binop','sintactico3_2.py',32),
  ('expr -> term','expr',1,'p_expr_term','sintactico3_2.py',36),
  ('term -> NOT factor','term',2,'p_term_not','sintactico3_2.py',40),
  ('term -> factor','term',1,'p_term_factor','sintactico3_2.py',44),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_group','sintactico3_2.py',48),
  ('factor -> BOOLEAN','factor',1,'p_factor_boolean','sintactico3_2.py',52),
  ('factor -> NUMBER','factor',1,'p_factor_boolean','sintactico3_2.py',53),
]
